@model SoccerLeague.ViewModels.HomeIndexViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Página Inicial - Soccer League";

    var leagueErrors = ViewBag.LeagueErrors as List<string> ?? new List<string>();
    bool leagueReady = ViewBag.IsLeagueReady as bool? ?? false;
    bool hasMatches = ViewBag.HasMatches as bool? ?? false;
}

<style>
    .home-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 30px;
    }

    .column-left, .column-right {
        background: #fff;
        border: 1px solid #dee2e6;
        border-radius: 6px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        flex: 1;
        min-width: 300px;
    }

        .column-left h2, .column-right h2 {
            margin-top: 0;
            font-size: 1.5rem;
            border-bottom: 2px solid #007bff;
            padding-bottom: 5px;
        }
</style>

@if (hasMatches)
{
    <div class="league-status success">
        <span class="status-indicator status-green"></span>
        <strong> A liga está em andamento!</strong>
    </div>
}
else
{
<div class="league-status @(leagueReady ? "success" : "warning")">
    @if (leagueReady)
    {
        <span class="status-indicator status-green"></span>
        <strong> A liga está apta para iniciar!</strong>
    }
    else
    {
<div style="display: flex; gap: 5px;">
    <span class="status-indicator status-red"></span>
    <p style="color: #dc3545; margin-bottom: 20px;">A liga <strong>não</strong> está apta para iniciar.</p>
</div>

        <ul class="error-list">
            @foreach (var err in leagueErrors)
            {
                <li>@err</li>
            }
        </ul>

    }
</div>


}

<div class="btn-group" style="margin-bottom:15px;">
    @if (leagueReady && !hasMatches)
    {
        <form action='@Url.Action("SortearPartidas", "Tabelas")' method="post" style="display:inline;">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary">Iniciar liga</button>
        </form>
    }

    @if (hasMatches)
    {
        <form action='@Url.Action("ResetarTabela", "Tabelas")' method="post" style="display:inline; margin-left:5px;">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">Resetar Tabela</button>
        </form>
    }
    
</div>

@if (ViewBag.SortearError != null)
{
    <div class="alert alert-danger">
        @ViewBag.SortearError
    </div>
}
@if (ViewBag.SortearSuccess != null)
{
    <div class="alert alert-success">
        @ViewBag.SortearSuccess
    </div>
}
@if (ViewBag.ResetError != null)
{
    <div class="alert alert-danger">
        @ViewBag.ResetError
    </div>
}
@if (ViewBag.ResetSuccess != null)
{
    <div class="alert alert-success">
        @ViewBag.ResetSuccess
    </div>
}

<div class="home-container">
    <!-- Coluna esquerda: Classificação -->
    <div class="column-left">
        <h2>Classificação</h2>
        @Html.Partial("_TabelaParcial", Model.Tabela)
    </div>

    <!-- Coluna direita: Partidas por rodada -->
    <div class="column-right">
        <h2>Rodada @Model.CurrentRound</h2>

        <div class="round-controls mb-2" style="text-align:center;">
            @if (Model.PrevRound >= 1)
            {
                @Html.ActionLink(
                    "← Rodada " + Model.PrevRound,
                    "Index",
                    "Home",
                    new { round = Model.PrevRound },
                    new { @class = "btn btn-outline-primary" }
                )
            }
            @if (Model.NextRound <= Model.MaxRound)
            {
                @Html.ActionLink(
                    "Rodada " + Model.NextRound + " →",
                    "Index",
                    "Home",
                    new { round = Model.NextRound },
                    new { @class = "btn btn-outline-primary" }
                )
            }
        </div>

        @Html.Partial("_PartidasParcial", Model.Partidas)
    </div>
</div>
